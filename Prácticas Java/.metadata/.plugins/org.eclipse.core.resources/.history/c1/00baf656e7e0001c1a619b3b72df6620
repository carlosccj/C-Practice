package prExamenJunio2019;

import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;

public class Tiovivo {
	private int capacidad;
	private int nPasajeros;
	private ReentrantLock l;
	private Condition puedeSubir;
	private Condition puedeBajar;
	private Condition puedeViajar;
		
	
	public void subir(int id) throws InterruptedException 
	{	
		l.lock();
		try {
			if (nPasajeros == capacidad) {
				puedeSubir.await();
			}
			nPasajeros++;
			if (nPasajeros < capacidad) {
				System.out.println("El pasajero " + id + " ha SUBIDO al Tiovivo y ahora hay " + nPasajeros + " pasajeros");
				puedeSubir.signal();
			} else {
				System.out.println("El pasajero " + id + " ha SUBIDO al Tiovivo y ahora el Tiovivo esta LLENO\n");
				puedeViajar.signal();
			}
		} finally {
			l.unlock();
		}
	}
	
	public void bajar(int id) throws InterruptedException 
	{
		l.lock();
		try {
			
		} finally {
			l.unlock();
		}
	}
	
	public void esperaLleno () throws InterruptedException 
	{
		l.lock();
		try {
			
		} finally {
			l.unlock();
		}
	}
	
	public void finViaje () 
	{
		l.lock();
		try {
			
		} finally {
			l.unlock();
		}
	}
}
